{"version":3,"sources":["pages/Country.js","pages/About.js","component/WeatherCity.js","App.js","reportWebVitals.js","index.js"],"names":["Country","className","About","useState","count","setCount","useEffect","document","title","onClick","WeatherCity","city","setCity","search","setSearch","fetchApi","a","url","fetch","response","json","resJson","console","log","cod","placeholder","onChange","event","target","value","onPressEnter","src","weather","icon","name","justify","span","main","feels_like","temp","humidity","Header","Layout","App","style","position","zIndex","width","theme","mode","defaultSelectedKeys","Item","to","path","exact","component","height","alignItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb37c64b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Country = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"page-content\">\r\n                <h2>Country</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Country;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction About() {\r\n    const [count, setCount] = useState(0);\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        document.title = `You clicked ${count} times`;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <p>You clicked {count} times</p>\r\n            <h1>about</h1>\r\n            <h1>about</h1>\r\n            <h1>about</h1>\r\n            <h1>about</h1>\r\n            <button onClick={() => setCount(count + 1)}>\r\n                Click me\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Input, Row, Col } from 'antd';\r\n\r\n\r\nconst WeatherCity = () => {\r\n    const [ city, setCity ] = useState(null);\r\n    const [ search, setSearch ] = useState(\"Lahore\");\r\n\r\n    useEffect( () => {\r\n        fetchApi();\r\n    }, []);\r\n\r\n    const fetchApi = async () => {\r\n        try {\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=b04af520463d0bf24895405c630a5e04\\n`;\r\n            const response = await fetch(url);\r\n            const resJson = await response.json();\r\n            console.log(resJson);\r\n            if (resJson.cod === 200) {\r\n                setCity(resJson);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"site-card-border-less-wrapper\">\r\n                <div>\r\n                    <Card>\r\n                        <Input placeholder=\"Basic usage\" onChange={ (event) => {\r\n                            setSearch(event.target.value)\r\n                        }} onPressEnter={() => fetchApi()} />\r\n\r\n                        {!city ? (\r\n                            <p> Not Found </p>\r\n                        ) : (\r\n                            <div>\r\n                                  {/* <img src={require(`https://openweathermap.org/img/w/${icons}.png`)}/> */}\r\n\r\n                                <h1> <img src={`https://openweathermap.org/img/w/${city.weather[0].icon}.png`}/> {city.name}</h1>\r\n\r\n                                <Row justify=\"center\">\r\n                                    <Col span={8}>\r\n                                        <p>feels_like: {city.main.feels_like} </p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                        <p>Temp: {city.main.temp} </p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                        <p>feels_like: {city.main.feels_like} </p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                        <p>humidity: {city.main.humidity}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        )\r\n                        }\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherCity;\r\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport { Layout, Menu, Row, Col, Card } from 'antd';\nimport Country from \"./pages/Country\";\nimport About from \"./pages/About\";\nimport WeatherCity from \"./component/WeatherCity\";\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport './App.css';\n\n\nconst { Header } = Layout;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Layout>\n            <Router>\n                <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                        <Menu.Item key=\"1\">\n                            <Link to=\"/\">Home</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to=\"/country\">Country</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\">\n                            <Link to=\"/About\">About</Link>\n                        </Menu.Item>\n                    </Menu>\n                </Header>\n                <Switch>\n                    <Route path=\"/country\" exact component={Country} />\n                    <Route path=\"/about\"  component={About} />\n                </Switch>\n            </Router>\n            <div className=\"page-content\" style={{ height : 'calc(100vh - 70px)'}}>\n                <Row justify=\"center\" style={{ alignItems: 'center', height: '100%' }}>\n                    <Col span={8}>\n                        <Card>\n                            <WeatherCity />\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n\n        </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}